joy_node:
  deadzone: 0.01
  autorepeat_rate: 20
  coalesce_interval: 0.01

teleop:
  # Default mode - Stop for safety
  default:
    type: topic
    is_default: true
    message_type: ackermann_msgs/AckermannDriveStamped
    topic_name: high_level/ackermann_cmd_mux/input/nav_0
    message_value:
      -
        target: drive.speed
        value: 0.0
      -
        target: drive.steering_angle
        value: -0.04021

  # Enable Human control by holding Left Bumper
  human_control:
    type: topic
    message_type: ackermann_msgs/AckermannDriveStamped
    topic_name: low_level/ackermann_cmd_mux/input/teleop
    deadman_buttons: [4]
    axis_mappings:
      -
        axis: 1
        target: drive.speed
        scale: 5                  # joystick will command plus or minus 2 meters / second
        offset: 0.20 #0.10
      -
        axis: 3
        target: drive.steering_angle
        scale: 0.34               # joystick will command plus or minus ~20 degrees steering angle
        offset: -0.04021

  # Enable autonomous control by pressing right bumper
  # This switch causes the joy_teleop to stop sending messages to input/teleop
  # And send messages to /dev/null (an unused ROS topic)
#  autonomous_control:
#    type: topic
#    message_type: std_msgs/Bool
#    topic_name: /dev/stop
#    deadman_buttons: [5]
#    message_value:
#      -
#        target: data
#        value: True

#  autonomous_control:
#    type: topic
#    message_type: std_msgs/Float64
#    topic_name: /vesc/commands/motor/duty_cycle
#    deadman_buttons: [5]
#    axis_mappings:
#      -
#        axis: 1
#        target: data
#        scale: 0.8                  # joystick will command plus or minus 2 meters / second
#        offset: 0.00 #0.10
#      -
#        axis: 3
#        target: control.current
#        scale:  5               # joystick will command plus or minus ~20 degrees steering angle
#        offset: 0
